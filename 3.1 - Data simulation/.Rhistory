mutate(
age_cat   = sample(age_bins, 1),
education = sample(edu_lvls, 1),
u0_trust  = rnorm(1, 0, 0.30),       # random intercept Trust
beta_tr   = rnorm(1, -0.01, 0.03)    # random slope Trial
) |>
ungroup()
# 3) compute Trust outcome
df |>
mutate(
trial_c = as.numeric(trial) - mean(trials),              # centred  –4.5…+4.5
mu_tr   = mu_Trust_vec[condition] +
if_else(condition == "low" & gender == "male",
beta_LM, 0),
Trust   = rnorm(n(), mu_tr + u0_trust + beta_tr * trial_c, 1) |>
round() |> pmin(7) |> pmax(1)
) |>
select(pid, condition, gender, age_cat, education,
trial, WOA, Trust)
}
## -------------------- Scenario 1 ------------------------------------------------
scenario1_df <- simulate_scenario()
View(scenario1_df)
## -------------------- Scenario 1 ------------------------------------------------
scenario1_df <- simulate_scenario()
## 3.  How are the covariates distributed?
scenario1_df |>
distinct(pid, age_cat, education) |>
count(age_cat, education)         # roughly uniform because we sampled at random
## 4.  Do the outcome means match the population parameters?
scenario1_df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop")
scenario1_df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust))
library(ggplot2)
ggplot(scenario1_df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
ggplot(scenario1_df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
inpsect_design -> function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop")
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust))
ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
}
inpsect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop")
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust))
ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
}
inspect_design(scenario1_df)
inpsect_design(scenario1_df)
# Scenario 2: remove WOA wording effect
scenario2_df <- simulate_scenario(
mu_WOA_vec = c(low = .55, baseline = .55, high = .55)
)
inpsect_design(scenario2_df)
inpsect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop")
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust))
ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
}
inpsect_design(scenario2_df)
inspect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop")
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust))
p1 = ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
p2 = ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
print(p1)
print(p2)
}
inspect_design(scenario2_df)
inspect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop") |>
print()
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust)) |>
print()
p1 = ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
p2 = ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
print(p1)
print(p2)
}
inspect_design(scenario2_df)
conds     <- c("low", "baseline", "high")
genders   <- c("female", "male")
age_bins  <- c("18-34", "35-49", "50-65")
edu_lvls  <- c("none", "highschool", "college")
trials    <- 1:10
mu_WOA_base <- c(low = .50, baseline = .70, high = .30)   # unchanged order
mu_Trust_base <- c(low = 4.4,  baseline = 4.7, high = 4.2)  # Baseline highest
boost_low_male_WOA   <-  +0.05
boost_low_male_Trust <-  +0.40
conds     <- c("low", "baseline", "high")
genders   <- c("female", "male")
age_bins  <- c("18-34", "35-49", "50-65")
edu_lvls  <- c("none", "highschool", "college")
trials    <- 1:10
mu_WOA_base <- c(low = .50, baseline = .70, high = .30)   # unchanged order
mu_Trust_base <- c(low = 4.4,  baseline = 4.7, high = 4.2)  # Baseline highest
boost_low_male_WOA   <-  +0.05
boost_low_male_Trust <-  +0.40
## -------------------- helper ---------------------------------------------------
simulate_scenario <- function(mu_WOA_vec   = mu_WOA_base,
mu_Trust_vec = mu_Trust_base,
beta_LM_WOA = boost_low_male_WOA,
beta_LM_Trust      = boost_low_male_Trust,
n_per_cell   = 25,
sd_WOA       = .18) {
mu_WOA_full <- setNames(
rep(mu_WOA_vec, each = 2),
paste(rep(conds, each = 2), genders, sep = "_")
)
mu_WOA_full["low_male"] <- mu_WOA_full["low_male"] + beta_LM_WOA
# core design: 150 participants × 10 trials
df <- sim_design(
between = list(condition = conds,
gender    = genders),
within  = list(trial = trials),
n   = n_per_cell,
mu  = mu_WOA_full,
sd  = sd_WOA,
dv  = "WOA",
id  = "pid",
long = TRUE
)
# attach covariates & random effects per participant
df <- df |>
group_by(pid) |>
mutate(
age_cat   = sample(age_bins, 1),
education = sample(edu_lvls, 1),
u0_trust  = rnorm(1, 0, 0.30),       # random intercept Trust
beta_tr   = rnorm(1, -0.01, 0.03)    # random slope Trial
) |>
ungroup()
# compute Trust outcome
df |>
mutate(
trial_c = as.numeric(trial) - mean(trials),              # centered  –4.5…+4.5
mu_tr   = mu_Trust_vec[condition] +
if_else(condition == "low" & gender == "male",
beta_LM_Trust, 0),
Trust   = rnorm(n(), mu_tr + u0_trust + beta_tr * trial_c, 1) |>
round() |> pmin(7) |> pmax(1)
) |>
select(pid, condition, gender, age_cat, education,
trial, WOA, Trust)
}
inspect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop") |>
print()
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust)) |>
print()
p1 = ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
p2 = ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
print(p1)
print(p2)
}
## -------------------- Scenario 1 ------------------------------------------------
scenario1_df <- simulate_scenario(
mu_WOA_vec   = mu_WOA_base,
mu_Trust_vec = mu_Trust_base,
beta_LM_WOA = boost_low_male_WOA,
beta_LM_Trust      = boost_low_male_Trust,
)
inspect_design(scenario1_df)
# Scenario 2 – only Trust keeps the male boost
scenario2_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),  # wording effect gone
beta_LM_WOA      = 0,                               # remove boost in WOA
# Trust remains as in scenario 1 (baseline highest + male boost in low)
)
inspect_design(scenario2_df)
# Scenario 3 – full null on both measures
scenario3_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),
mu_Trust_vec     = rep(4.5, 3) |> setNames(conds),
beta_LM_WOA      = 0,
beta_LM_Trust    = 0            # remove male boost in Trust as well
)
inspect_design(scenario3_df)
# Scenario 2 – only Trust keeps the male boost
scenario2_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),  # wording effect gone
beta_LM_WOA      = 0,                               # remove boost in WOA
# Trust remains as in scenario 1 (baseline highest + male boost in low)
)
inspect_design(scenario2_df)
# Scenario 3 – full null on both measures
scenario3_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),
mu_Trust_vec     = rep(4.5, 3) |> setNames(conds),
beta_LM_WOA      = 0,
beta_LM_Trust    = 0            # remove male boost in Trust as well
)
inspect_design(scenario3_df)
source("C:/Users/david/OneDrive - Universität Zürich UZH/FS25_quant - General/Project folder incl templates/3 - Final materials/3.1 - Data simulation/R/simulate.R")
View(scenario1_df)
## -------------------- helper -------------------------------------------------
simulate_scenario <- function(mu_WOA_vec    = mu_WOA_base,
mu_Trust_vec  = mu_Trust_base,
beta_LM_WOA   = boost_low_male_WOA,
beta_LM_Trust = boost_low_male_Trust,
n_per_cell    = 25, # 150/(2*3)
sd_WOA        = 0.18) {
# produces low_female, low_male, etc.
mu_WOA_full <- setNames(
rep(mu_WOA_vec, each = 2),
paste(rep(conds, each = 2), genders, sep = "_")
)
# add boost for low_male specifically
mu_WOA_full["low_male"] <- mu_WOA_full["low_male"] + beta_LM_WOA
# core design: 150 participants × 10 trials
df <- sim_design(
between = list(condition = conds,
gender    = genders),
within  = list(trial = trials),
n   = n_per_cell,
mu  = mu_WOA_full,
sd  = sd_WOA,
dv  = "WOA",
id  = "pid",
long = TRUE
)
# attach covariates & random effects per participant
df <- df |>
group_by(pid) |>
mutate(
age_cat   = sample(age_bins, 1),
education = sample(edu_lvls, 1),
u0_trust  = rnorm(1, 0, 0.30),       # random intercept Trust
beta_tr   = rnorm(1, -0.01, 0.03)    # random slope Trial
) |>
ungroup()
# compute Trust outcome
df |>
mutate(
trial_c = as.numeric(trial) - mean(trials), # centered  –4.5…+4.5
mu_tr   = mu_Trust_vec[condition] +
if_else(condition == "low" & gender == "male",
beta_LM_Trust, 0),
Trust   = rnorm(n(), mu_tr + u0_trust + beta_tr * trial_c, 1) |>
round() |> pmin(7) |> pmax(1)
) |>
select(pid, condition, gender, age_cat, education,
trial, WOA, Trust) |>
arrange(pid)
}
inspect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop") |>
print()
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust)) |>
print()
p1 = ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
p2 = ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
print(p1)
print(p2)
}
# Scenario 1 – What we expect
scenario1_df <- simulate_scenario()
# Scenario 2 – only Trust keeps the male boost
scenario2_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),  # wording effect gone
beta_LM_WOA      = 0,                               # remove boost in WOA
# Trust remains as in scenario 1 (baseline highest + male boost in low)
)
# Scenario 3 – full null on both measures
scenario3_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),
mu_Trust_vec     = rep(4.5, 3) |> setNames(conds),
beta_LM_WOA      = 0,
beta_LM_Trust    = 0            # remove male boost in Trust as well
)
library(tidyverse)
library(faux)
library(ggplot2)
set.seed(10)
conds     <- c("low", "baseline", "high")
genders   <- c("female", "male")
age_bins  <- c("18-34", "35-49", "50-65")
edu_lvls  <- c("none", "highschool", "college")
trials    <- 1:10
mu_WOA_base <- c(low = .50, baseline = 0.70, high = 0.30)
mu_Trust_base <- c(low = 4.4,  baseline = 4.7, high = 4.2)
boost_low_male_WOA   <-  +0.05
boost_low_male_Trust <-  +0.40
mu_WOA_base
mu_WOA_vec    = mu_WOA_base
mu_Trust_vec  = mu_Trust_base
beta_LM_WOA   = boost_low_male_WOA
beta_LM_Trust = boost_low_male_Trust
n_per_cell    = 25, # 150/(2*3)
sd_WOA        = 0.18
n_per_cell    = 25
rep(mu_WOA_vec, each = 2)
mu_WOA_full <- setNames(
rep(mu_WOA_vec, each = 2),
paste(rep(conds, each = 2), genders, sep = "_")
)
mu_WOA_full
mu_WOA_full["low_male"] <- mu_WOA_full["low_male"] + beta_LM_WOA
mu_WOA_full
df <- sim_design(
between = list(condition = conds,
gender    = genders),
within  = list(trial = trials),
n   = n_per_cell,
mu  = mu_WOA_full,
sd  = sd_WOA,
dv  = "WOA",
id  = "pid",
long = TRUE
)
df
dim(df)
df <- df |>
group_by(pid) |>
mutate(
age_cat   = sample(age_bins, 1),
education = sample(edu_lvls, 1),
u0_trust  = rnorm(1, 0, 0.30),       # random intercept Trust
beta_tr   = rnorm(1, -0.01, 0.03)    # random slope Trial
) |>
ungroup()
df
mu_WOA_full
df |>
mutate(
trial_c = as.numeric(trial) - mean(trials), # centered  –4.5…+4.5
mu_tr   = mu_Trust_vec[condition] +
if_else(condition == "low" & gender == "male",
beta_LM_Trust, 0),
Trust   = rnorm(n(), mu_tr + u0_trust + beta_tr * trial_c, 1) |>
round() |> pmin(7) |> pmax(1)
) |>
select(pid, condition, gender, age_cat, education,
trial, WOA, Trust) |>
arrange(pid)
df
simulate_scenario <- function(mu_WOA_vec    = mu_WOA_base,
mu_Trust_vec  = mu_Trust_base,
beta_LM_WOA   = boost_low_male_WOA,
beta_LM_Trust = boost_low_male_Trust,
n_per_cell    = 25, # 150/(2*3)
sd_WOA        = 0.18) {
# produces low_female, low_male, etc.
mu_WOA_full <- setNames(
rep(mu_WOA_vec, each = 2),
paste(rep(conds, each = 2), genders, sep = "_")
)
# add boost for low_male specifically
mu_WOA_full["low_male"] <- mu_WOA_full["low_male"] + beta_LM_WOA
# core design: 150 participants × 10 trials
df <- sim_design(
between = list(condition = conds,
gender    = genders),
within  = list(trial = trials),
n   = n_per_cell,
mu  = mu_WOA_full,
sd  = sd_WOA,
dv  = "WOA",
id  = "pid",
long = TRUE
)
# attach covariates & random effects per participant
df <- df |>
group_by(pid) |>
mutate(
age_cat   = sample(age_bins, 1),
education = sample(edu_lvls, 1),
u0_trust  = rnorm(1, 0, 0.30),       # random intercept Trust
beta_tr   = rnorm(1, -0.01, 0.03)    # random slope Trial
) |>
ungroup()
# compute Trust outcome
df |>
mutate(
trial_c = as.numeric(trial) - mean(trials), # centered  –4.5…+4.5
mu_tr   = mu_Trust_vec[condition] +
if_else(condition == "low" & gender == "male",
beta_LM_Trust, 0),
Trust   = rnorm(n(), mu_tr + u0_trust + beta_tr * trial_c, 1) |>
round() |> pmin(7) |> pmax(1)
) |>
select(pid, condition, gender, age_cat, education,
trial, WOA, Trust) |>
arrange(pid)
}
inspect_design <- function(df) {
df |>
group_by(condition) |>
summarise(mean_WOA   = mean(WOA),
mean_Trust = mean(Trust),
.groups = "drop") |>
print()
df |>
filter(condition == "low") |>
group_by(gender) |>
summarise(mean_Trust = mean(Trust)) |>
print()
p1 = ggplot(df, aes(condition, WOA, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "WOA by condition × gender")
p2 = ggplot(df, aes(condition, Trust, fill = gender)) +
geom_boxplot(alpha = .6) +
labs(title = "Trust by condition × gender")
print(p1)
print(p2)
}
scenario1_df <- simulate_scenario()
scenario1_df
inspect_design(scenario1_df)
scenario2_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),  # wording effect gone
beta_LM_WOA      = 0,                               # remove boost in WOA
# Trust remains as in scenario 1 (baseline highest + male boost in low)
)
scenario2_df
inspect_design(scenario2_df)
scenario3_df <- simulate_scenario(
mu_WOA_vec       = rep(.55, 3) |> setNames(conds),
mu_Trust_vec     = rep(4.5, 3) |> setNames(conds),
beta_LM_WOA      = 0,
beta_LM_Trust    = 0            # remove male boost in Trust as well
)
inspect_design(scenario3_df)
